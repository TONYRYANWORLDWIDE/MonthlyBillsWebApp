@*@model IEnumerable<MonthlyBillsWebApp.Models.UpcomingBill>*@
@model PagedList.IPagedList<MonthlyBillsWebApp.Models.UpcomingBill>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@functions{
    public void clearSearchString(string searchString)
    {
        searchString = "";
    }
}
@{
    ViewBag.Title = "Index";
}
<h2>Upcoming Bills</h2>

<div>
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
</div>


@using (Html.BeginForm("Index", "UpcomingBills", FormMethod.Get))
{
    <p>
        Find by Name: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
@using (Html.BeginForm("Index", "UpcomingBills", FormMethod.Get))
{
<div>

    <p>
        <button type="submit" onclick="clearSearchString">Reset</button>
    </p>
</div>
}
<table class="table">
    <tr class="trbold">
        <th>
            @Html.ActionLink("The Date", "Index", new { sortOrder = ViewBag.DateSortParam })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Bill)*@
            Day Of Week

        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.Cost)*@
            Name
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.runningtotalbills2)*@
            Amount
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.bringhome)*@
            Type
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.RunningtotalincomeFinal)*@
            Running Total
        </th>
        @*<th></th>*@
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.TheDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DayOfWeek)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RunningTotal)
            </td>
            @*<td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.id })
                </td>*@
        </tr>
    }

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
